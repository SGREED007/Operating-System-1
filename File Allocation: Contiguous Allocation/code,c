#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int memory[MAX] = {0}; // Memory blocks initialized to 0 (free)

void allocateFile(int start, int length) {
    int allocated = 0;

    for (int i = start; i < start + length; i++) {
        if (memory[i] == 1) {
            printf("Error: Block %d already allocated. File allocation failed.\n", i);
            return;
        }
    }

    for (int i = start; i < start + length; i++) {
        memory[i] = 1;
        allocated++;
    }

    printf("File allocated successfully! Blocks: ");
    for (int i = start; i < start + length; i++) {
        printf("%d ", i);
    }
    printf("\n");
}

void displayMemory() {
    printf("\nMemory Blocks:\n");
    for (int i = 0; i < MAX; i++) {
        printf("%d ", memory[i]);
        if ((i + 1) % 10 == 0) printf("\n");
    }
}

int main() {
    int choice, start, length;

    printf("Contiguous File Allocation\n");
    do {
        printf("\n1. Allocate File\n2. Display Memory\n3. Exit\nEnter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter starting block and length: ");
                scanf("%d %d", &start, &length);
                if (start < 0 || start + length > MAX) {
                    printf("Error: Invalid range. Allocation failed.\n");
                } else {
                    allocateFile(start, length);
                }
                break;
            case 2:
                displayMemory();
                break;
            case 3:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice!\n");
        }
    } while (choice != 3);

    return 0;
}
